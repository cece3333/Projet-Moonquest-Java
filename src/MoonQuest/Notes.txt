Notes : 

Fonction isValidMove : fonctionne bien (pas encore créée pour les nuages)
Déplacement aérien quand véhicule activé ; OK

Problèmes notés : 
- lorsqu'un véhicule est détruit, ses nuages doivent être déduits du score du joueur !!
- les mouvements sont bien indiqués sur le fichier .ser (pour sauvegarder la partie) mais faire en sorte qu'ils soient indiqués dans le bon format (avec le score par mouvement si il y a, voiture détruite etc.)




À faire: (cf. manque dans les conditions)
- permettre d'entrer minuscule ou majuscule pour éviter que le jeu quitte à cause d'une erreur
- Créer un menu avec les règles du jeu 
- scinder la classe Plateau en 1-2 classe pour éviter d'avoir trop de lignes de codes
- faire un count des nuages restants sur le plateau (condition de fin)
- bien évidemment créer les packages



Pour l'instant, je crois que captureNuages peut capturer plus de 3 nuages (mais normalement le véhicule peut bien être activé), donc à voir si je changerais pas ça 

Peut-être rajouter une entrée permettant d'afficher le score du véhicule sélectionné (juste après l'entrée de la case source ex:) pour savoir combien de nuages le véhicule 
--> permettre un changement d'entrée sûre ? genre "Conserver cette pièce source ?" mais pas pour la case destination 

--> Est-ce que je dois empêcher les glaces d'écraser les véhicules de leur propre type ?

DONE : 
- Fonction isValidMove : fonctionne bien 
- Déplacement aérien quand véhicule activé ; OK
- Il faut pouvoir modifier la couleur du véhicule lorsqu'il est activé (normalement devient blanc) : DONE
- Introduction des tours par joueurs 
- un score qui s'update en fonction des nuages capturés

Problèmes résolus : 
--> après une collision qui détruit le véhicule, le tour ne passe pas (alors qu'il devrait) = (false mal placé dans isValidMove)
--> nuage quand même capturé alors que le mouvement n'était pas permis (vérification du mouvement avant la capture des nuages)
--> is glaceinbetween ne fonctionne pas... (else if plutôt que if? + le mouvement était permis dans le cas où l'instance n'était pas un véhicule mais )